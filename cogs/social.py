import datetime
import json
import time

# try:
import discord
from discord import Option, Webhook, Forbidden
from discord.ext import commands, tasks
# except:
#     import pycord as discord
#     from pycord import Option, Webhook, Forbidden
#     from discord.ext import commands, tasks

import Data
import utils
from Data import db, getEmbedColor, EmbedColor, preffix
import d


class social(commands.Cog):
    ''' social | BOT COG'''
    name = "social"
    author = "Minemaster"

    def __init__(self, bot: discord.Bot):
        self.bot = bot
        self.background.start()

    social = discord.SlashCommandGroup(
        "—Å–æ—Ü–∏–∞–ª",
        "",

    )
    coRPlayerFindRequest_ExpirationTime = 600000  # in ms

    def getUTC(self) -> int:
        # TODO: —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å
        current_time_utc = datetime.datetime.utcnow()

        timestamp_utc_ms = int(current_time_utc.timestamp() * 1000)
        # print(timestamp_utc_ms)
        return timestamp_utc_ms

    def UTCtoTimestamp(self, utcValueInMS):
        return int(utcValueInMS / 1000)

    @tasks.loop(seconds=10)  # –£–∫–∞–∑—ã–≤–∞–µ—Ç–µ –∏–Ω—Ç–µ—Ä–≤–∞–ª –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
    async def background(self):
        # print("BG")
        for doc in db.coRPsFindRequests.find(
                {"timestamp": {"$lt": self.getUTC() - self.coRPlayerFindRequest_ExpirationTime}}):
            user = self.bot.get_user(doc['uid'])
            # print(doc)
            if user:
                await user.send(f"–í–∞—à –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–∏—Å–∫ —Å–æ—Ä–æ–ª–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ **{doc['gname']}** –∏—Å—Ç—ë–∫!")
            db.coRPsFindRequests.delete_one(doc)
        # print("BG")

    @commands.cooldown(1, 60, commands.BucketType.user)
    @commands.command(aliases=["–Ω–∞—á–∞—Ç—å-–ø–æ–∏—Å–∫-—Å–æ—Ä–æ–ª–∞"])
    async def startFindCoRPlayer(self, ctx: commands.Context):
        doc = db.coRPsFindRequests.find_one({"gid": ctx.author.guild.id, "uid": ctx.author.id})

        if not doc:
            utc = self.getUTC()
            db.coRPsFindRequests.insert_one(
                {"gid": ctx.author.guild.id, "uid": ctx.author.id, "gname": ctx.guild.name, "uname": ctx.author.name,
                 "timestamp": utc})
            await ctx.reply(
                f"–ó–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–∏—Å–∫ —Å–æ—Ä–æ–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –¥–ª—è —ç—Ç–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞! –û–Ω –∏—Å—Ç–µ—á—ë—Ç <t:{self.UTCtoTimestamp(utc + self.coRPlayerFindRequest_ExpirationTime)}:R>."
                f"\n–û—Ç–º–µ–Ω–∏—Ç—å - `{preffix}–Ω–∞—á–∞—Ç—å-–ø–æ–∏—Å–∫-—Å–æ—Ä–æ–ª–∞` | –ü–æ–∏—Å–∫ –¥—Ä—É–≥–∏—Ö —Å–æ—Ä–æ–ª–æ–≤ - `{preffix}–ø–æ–∏—Å–∫-—Å–æ—Ä–æ–ª–∞`",
                delete_after=10)
        else:
            await ctx.reply(
                f"–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–∏—Å–∫ —Å–æ—Ä–æ–ª–∞, –∫–æ—Ç–æ—Ä—ã–π –∏—Å—Ç–µ—á–µ—Ç <t:{self.UTCtoTimestamp(doc['timestamp'] + self.coRPlayerFindRequest_ExpirationTime)}:R>.",
                delete_after=10)

    @commands.cooldown(1, 60, commands.BucketType.user)
    @commands.command(aliases=["–æ—Ç–º–µ–Ω–∏—Ç—å-–ø–æ–∏—Å–∫-—Å–æ—Ä–æ–ª–∞"])
    async def cancelFindCoRPlayer(self, ctx: commands.Context):
        doc = db.coRPsFindRequests.find_one({"gid": ctx.author.guild.id, "uid": ctx.author.id})
        if doc:
            await ctx.reply("–ü–æ–∏—Å–∫ —Å–æ—Ä–æ–ª–∞ –æ—Ç–º–µ–Ω—ë–Ω –Ω–∞ —ç—Ç–æ–º —Å–µ—Ä–≤–µ—Ä–µ.", delete_after=10)
            db.coRPsFindRequests.delete_one({"gid": ctx.author.guild.id, "uid": ctx.author.id})
        else:
            await ctx.reply(f"–í—ã –Ω–µ –Ω–∞—á–∞–ª–∏ –ø–æ–∏—Å–∫ —Å–æ—Ä–æ–ª–∞. –°–¥–µ–ª–∞—Ç—å —ç—Ç–æ –º–æ–∂–Ω–æ –∫–æ–º–∞–Ω–¥–æ–π `{preffix}–Ω–∞—á–∞—Ç—å-–ø–æ–∏—Å–∫-—Å–æ—Ä–æ–ª–∞`",
                            delete_after=10)

    @commands.command(aliases=["–ø–æ–∏—Å–∫-—Å–æ—Ä–æ–ª–∞"])
    async def findCoRPlayer(self, ctx: commands.Context):
        embedContent = ""
        for doc in db.coRPsFindRequests.find({"gid": ctx.guild.id}):
            embedContent += f"<@{doc['uid']}> –∏—â–µ—Ç —Å–æ—Ä–æ–ª–∞! –ù–∞–π—Ç–∏ –µ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π - </–ø–æ–∏—Å–∫-–ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:1203654817692778538>. –ü–æ–∏—Å–∫ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è <t:{self.UTCtoTimestamp(doc['timestamp'] + self.coRPlayerFindRequest_ExpirationTime)}:R>\n"
        embedContent = utils.formatStringLength(embedContent, 3990)
        if embedContent == "":
            embedContent = "–ù–∏–∫—Ç–æ –Ω–µ –∏—â–µ—Ç —Å–æ—Ä–æ–ª–∞"
        embed = discord.Embed(title="–ö—Ç–æ —Å–µ–π—á–∞—Å –∏—â–µ—Ç —Å–æ—Ä–æ–ª–∞", description=f"{embedContent}",
                              colour=getEmbedColor(EmbedColor.Neutral))

        await ctx.reply(embed=embed)

    # @commands.Cog.listener("on_presence_update")
    # async def on_presence_update(self, before:discord.Member, after:discord.Member):
    #     ...
    # if before.activity != after.activity:
    #     print(after.name)
    #     before_activity_name=""
    #     after_activity_name=""
    #     if before.activity:
    #         before_activity_name=before.activity.name
    #     if after.activity:
    #         after_activity_name=after.activity.name
    #     print(before_activity_name, "   ==>   ", after_activity_name)

    @commands.command(aliases=["–æ—Å–µ–±–µ", "–ø—Ä–æ—Ñ–∏–ª—å", "profile"])
    async def about(self, ctx, user: discord.Member = None):
        async with ctx.typing():
            if user is None:
                user = ctx.author
            userid = user.id
            print("finding result")
            result = None
            try:
                result = db.users.find({"userid": userid})[0]
                result = d.schema(result, d.Schemes.user)
            except:
                print(result)
                # if not result:
                #     Data.writeUserToDB(ctx.author.id, ctx.author.name)

            async def send_user_info_embed(color, about, age, timezone, karma, luck, permissions, xp, doc):
                def convertKarmaToEmoji(karma):
                    if karma < -1:
                        return "‚¨õ"
                    elif karma > 1:
                        return "‚¨ú"
                    else:
                        return "üî≤"

                def convertLuckToEmoji(luck):
                    if luck < -10:
                        return "‚¨õ"
                    elif luck < -5:
                        return "üü´"
                    elif luck < -3:
                        return "üü•"
                    elif luck < -1:
                        return "üüß"

                    elif luck > 10:
                        return "üü™"
                    elif luck > 5:
                        return "üü¶"
                    elif luck > 3:
                        return "üü©"
                    elif luck > 1:
                        return "üü®"



                    else:
                        return "‚¨ú"

                icons = " "
                try:
                    perms = json.loads(permissions)
                except:
                    perms = {}
                if "verified" in perms.keys():
                    icons += Data.icons[Data.Icons.verified] if perms["verified"] else ""
                if "root" in perms.keys():
                    icons += Data.icons[Data.Icons.root] if perms["root"] else ""
                if "edit_characters" in perms.keys():
                    icons += Data.icons[Data.Icons.edit_characters] if perms["edit_characters"] else ""
                if doc['banned'] == 1:
                    icons += Data.icons[Data.Icons.banned1]
                if doc['banned'] > 1:
                    icons += Data.icons[Data.Icons.banned2]
                embed = discord.Embed(title=user.display_name + icons, description=user.name, color=color)
                embed.add_field(name="–û —Å–µ–±–µ", value="> *" + about + "*", inline=False)
                embed.add_field(name="–õ–∏—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ", value="- –í–æ–∑—Ä–∞—Å—Ç: " + age + "\n- –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å: UTC+" + timezone,
                                inline=True)

                embed.add_field(name="–ø—Ä–æ—á–µ–µ", value=f"{convertKarmaToEmoji(karma)}{convertLuckToEmoji(luck)}",
                                inline=False)
                embed.add_field(name="–†–∞–∑—Ä–µ—à–µ–Ω–∏—è", value=f"{str(permissions)}", inline=False)
                xps = utils.calc_levelByXP(xp)
                embed.add_field(name="–û–ø—ã—Ç",
                                value=f"–í—Å–µ–≥–æ –æ–ø—ã—Ç–∞: {xp}\n–£—Ä–æ–≤–µ–Ω—å: {xps[0]}\n–û–ø—ã—Ç–∞ –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ —É—Ä–æ–≤–Ω—è: {xps[2]}",
                                inline=False)
                embed.add_field(name="–≠–∫–æ–Ω–æ–º–∏–∫–∞",
                                value=f"–ù–∞ —Ä—É–∫–∞—Ö: {utils.format_number(doc['money'])}{Data.currency}\n"
                                      f"–í –±–∞–Ω–∫–µ: {utils.format_number(doc['money_bank'])}{Data.currency}\n")
                embed.set_thumbnail(url=user.avatar.url if user.avatar else user.default_avatar.url)
                embed.set_footer(
                    text=f'–î–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ - \"{Data.preffix}—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å\" - —Ç–∞–º –≤—Å—è –Ω—É–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è.'
                         f' –î–ª—è —Å–ø—Ä–∞–≤–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ **–ø–æ–º–æ—â—å** –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ !!—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å.\n'
                         f'–î–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ò–ò –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ {Data.preffix}—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å-–∏–∏')

                embed.add_field(name="–ê–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫–∏",
                                value=f"–ê–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫ {'‚úÖ–í–ö–õ–Æ–ß–ï–ù‚úÖ' if doc['autoresponder'] else '‚ùå–í–´–ö–õ–Æ–ß–ï–ù‚ùå'}\n\n"
                                      f"# –ù–ï –ë–ï–°–ü–û–ö–û–ò–¢–¨: **{doc['autoresponder-disturb']}**\n\n"
                                      f"# –ù–ï–ê–ö–¢–ò–í–ï–ù: **{doc['autoresponder-inactive']}**\n\n"
                                      f"# –û–§–§–õ–ê–ô–ù: **{doc['autoresponder-offline']}**", inline=False)
                await ctx.send(f"[–°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è](https://glitchdev.ru/user/{doc['username']})", embed=embed)

            if result:
                await ctx.send("–ó–∞–ø–∏—Å—å –Ω–∞–π–¥–µ–Ω–∞")

                clr = 0x5865F2 if result["color"] is None else result["color"]
                abt = "–ó–∞–¥–∞—Ç—å –ø–æ–ª–µ '–û —Å–µ–±–µ' –º–æ–∂–Ω–æ –∫–æ–º–∞–Ω–¥–æ–π `!!—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –æ—Å–µ–±–µ`" if result["about"] is None else \
                    result[
                        "about"]
                tmz = "UTC+?. –ó–∞–¥–∞—Ç—å —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å –º–æ–∂–Ω–æ –∫–æ–º–∞–Ω–¥–æ–π `.—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —á–∞—Å–æ–≤–æ–π–ø–æ—è—Å`. –£–∫–∞–∂–∏—Ç–µ —Å–≤–æ–π —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –ì—Ä–∏–Ω–≤–∏—á–∞." if \
                    result["timezone"] is None else str(result["timezone"])
                age = "–ó–∞–¥–∞—Ç—å –ø–æ–ª–µ '–í–æ–∑—Ä–∞—Å—Ç' –º–æ–∂–Ω–æ –∫–æ–º–∞–Ω–¥–æ–π `!!—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –≤–æ–∑—Ä–∞—Å—Ç`\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å—Ç–∞–≤—å—Ç–µ —Ç–æ–ª—å–∫–æ —Å–≤–æ–π —Ä–µ–∞–ª—å–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç, –Ω–µ —Å–º–æ—Ç—Ä—è –Ω–∞ —Ç–æ, —Å–∫–æ–ª—å–∫–æ –≤–∞–º –ª–µ—Ç." if \
                    result["age"] is None else str(result["age"])
                karma = 0 if result["karma"] is None else str(result["karma"])
                luck = 0 if result["luck"] is None else str(result["luck"])
                result = d.schema(result, d.Schemes.user)
                await send_user_info_embed(clr, abt, age, tmz, int(karma), int(luck),
                                           result["permissions"], result["xp"],
                                           result)  # if result["permissions"] is None else '{}'
            else:
                await ctx.send("–ó–∞–ø–∏—Å—å –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –î–æ–±–∞–≤–ª–µ–Ω–∏–µ...")
                doc = Data.writeUserToDB(user.id, user.name)
                doc = d.schema(doc, d.Schemes.user)

                await send_user_info_embed(0x5865F2, "–ó–∞–¥–∞—Ç—å –ø–æ–ª–µ '–û —Å–µ–±–µ' –º–æ–∂–Ω–æ –∫–æ–º–∞–Ω–¥–æ–π !!—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –æ—Å–µ–±–µ",
                                           "–ó–∞–¥–∞—Ç—å –ø–æ–ª–µ '–í–æ–∑—Ä–∞—Å—Ç' –º–æ–∂–Ω–æ –∫–æ–º–∞–Ω–¥–æ–π `!!—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –≤–æ–∑—Ä–∞—Å—Ç`\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å—Ç–∞–≤—å—Ç–µ —Ç–æ–ª—å–∫–æ —Å–≤–æ–π —Ä–µ–∞–ª—å–Ω—ã–π –≤–æ–∑—Ä–∞—Å—Ç, –Ω–µ —Å–º–æ—Ç—Ä—è –Ω–∞ —Ç–æ, —Å–∫–æ–ª—å–∫–æ –≤–∞–º –ª–µ—Ç.",
                                           "UTC+?. –ó–∞–¥–∞—Ç—å —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å –º–æ–∂–Ω–æ –∫–æ–º–∞–Ω–¥–æ–π `!!—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —á–∞—Å–æ–≤–æ–π–ø–æ—è—Å`. –£–∫–∞–∂–∏—Ç–µ —Å–≤–æ–π —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –ì—Ä–∏–Ω–≤–∏—á–∞.",
                                           0, 0, None, 0, doc)
                # TODO: –ø—Ä–æ–≥—Ä–µ—Å—Å–±–∞—Ä —É—Ä–æ–≤–Ω—è

    @commands.command(aliases=["—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", "—ë"])
    async def edit(self, ctx: commands.Context, field="–ø–æ–º–æ—â—å", *, value=None):
        bans = [629999906429337600]  # 1064870586985234434
        if ctx.author.id in bans:
            await ctx.reply("–í—ã –∑–∞–±–∞–Ω–µ–Ω—ã –≤ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ!", delete_after=5)
            return
        doc = db.users.find_one({"userid": ctx.author.id})
        if not doc:
            doc = await Data.writeUserToDB(ctx.author.id, ctx.author.name)
        if field == "–æ—Å–µ–±–µ":
            db.users.update_one({"userid": ctx.author.id}, {"$set": {"about": value}})
            await ctx.reply("**–°—Ç—Ä–æ–∫–∞** `–æ—Å–µ–±–µ` (!!–æ—Å–µ–±–µ) –∏–∑–º–µ–Ω–µ–Ω–∞!")
        elif field == "–≤–æ–∑—Ä–∞—Å—Ç":
            db.users.update_one({"userid": ctx.author.id}, {"$set": {"age": int(value)}})
            await ctx.reply("**–ß–∏—Å–ª–æ** `–≤–æ–∑—Ä–∞—Å—Ç` (!!–æ—Å–µ–±–µ) –∏–∑–º–µ–Ω–µ–Ω–æ!")
        elif field == "—á–∞—Å–æ–≤–æ–π–ø–æ—è—Å":
            db.users.update_one({"userid": ctx.author.id}, {"$set": {"timezone": int(value)}})
            await ctx.reply("**–ß–∏—Å–ª–æ** `—á–∞—Å–æ–≤–æ–π–ø–æ—è—Å` (!!–æ—Å–µ–±–µ) –∏–∑–º–µ–Ω–µ–Ω–æ!")
        elif field == "—Ü–≤–µ—Ç":
            db.users.update_one({"userid": ctx.author.id}, {"$set": {"color": utils.parseColorTo0xHEX(value)}})
            await ctx.reply("**–¶–≤–µ—Ç –ø—Ä–æ—Ñ–∏–ª—è** `—Ü–≤–µ—Ç` (!!–æ—Å–µ–±–µ) –∏–∑–º–µ–Ω–µ–Ω!")


        elif field == "–∞–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫":
            no = ["0", "–Ω–µ—Ç", "false", "False", "no", "–ª–æ–∂—å"]
            pvalue = not value in no
            if value is None:
                doc = db.users.find_one({"userid": ctx.author.id})
                pvalue = not doc["autoresponder"]

            db.users.update_one({"userid": ctx.author.id}, {"$set": {"autoresponder": pvalue}})

            await ctx.reply(f"–ê–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫ **{'–≤–∫–ª—é—á–µ–Ω' if pvalue else '–≤—ã–∫–ª—é—á–µ–Ω'}**\n"
                            f"–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–¥–∞—Ç—å —Ç–µ–∫—Å—Ç –¥–ª—è –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫–∞, —Ç–æ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –ø–æ–ª—è –Ω–µ **–∞–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫** –∞ **–∞–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫-—Å—Ç–∞—Ç—É—Å**, –≥–¥–µ —Å—Ç–∞—Ç—É—Å - –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω, –æ—Ñ—Ñ–ª–∞–π–Ω –∏–ª–∏ –Ω–µ–±–µ—Å–ø–æ–∫–æ–∏—Ç—å. –î–ª—è –æ—Ç—á–∏—Å—Ç–∫–∏ —Å—Ç—Ä–æ–∫–∏ –ø—Ä–æ—Å—Ç–æ –æ—Å—Ç–∞–≤—å—Ç–µ —Å—Ç—Ä–æ–∫—É –ø—É—Å—Ç–æ–π.")

        elif field == "–∞–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫-–Ω–µ–∞–∫—Ç–∏–≤–µ–Ω":
            db.users.update_one({"userid": ctx.author.id},
                                {"$set": {"autoresponder-inactive": value if value != '-' else None}})
            await ctx.reply(f"–ê–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫ **–Ω–µ–∞–∫—Ç–∏–≤–µ–Ω** –∏–∑–º–µ–Ω—ë–Ω –Ω–∞ `{value if value != '-' else '–û–¢–°–£–¢–°–¢–í–ò–ï –û–¢–í–ï–¢–ê'}`")

        elif field == "–∞–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫-–æ—Ñ—Ñ–ª–∞–π–Ω":
            db.users.update_one({"userid": ctx.author.id},
                                {"$set": {"autoresponder-offline": value if value != '-' else None}})
            await ctx.reply(f"–ê–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫ **–æ—Ñ—Ñ–ª–∞–π–Ω** –∏–∑–º–µ–Ω—ë–Ω –Ω–∞ `{value if value != '-' else '–û–¢–°–£–¢–°–¢–í–ò–ï –û–¢–í–ï–¢–ê'}`")

        elif field == "–∞–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫-–Ω–µ–±–µ—Å–ø–æ–∫–æ–∏—Ç—å":
            db.users.update_one({"userid": ctx.author.id},
                                {"$set": {"autoresponder-disturb": value if value != '-' else None}})
            await ctx.reply(
                f"–ê–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫ **–Ω–µ–±–µ—Å–ø–æ–∫–æ–∏—Ç—å** –∏–∑–º–µ–Ω—ë–Ω –Ω–∞ `{value if value != '-' else '–û–¢–°–£–¢–°–¢–í–ò–ï –û–¢–í–ï–¢–ê'}`")
        elif field == "–ø–æ–ª":
            gender = None if value == '-' else True if value == '–º' else False if value == '–∂' else None
            db.users.update_one({"userid": ctx.author.id},
                                {"$set": {"bio_gender": gender}})
            await ctx.reply(
                f"–ó–∞–ø–∏—Å—å –æ –≤–∞—à–µ–º –ø–æ–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ `{'–ú—É–∂—Å–∫–æ–π' if gender else '–ñ–µ–Ω—Å–∫–∏–π' if gender is False else '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ'}`")
        elif field == "–¥—Ä" or field == "–¥–µ–Ω—å—Ä–æ–∂–¥–µ–Ω–∏—è":
            day = None
            month = None
            year = None

            parts = value.split('.')
            try:
                if len(parts) == 3:
                    day = int(parts[0])
                    month = int(parts[1])
                    year = int(parts[2])

                elif value == '-':
                    day = 0
                    month = 0
                    year = 0
                else:
                    await ctx.reply("–í–≤–µ–¥—ë–Ω–Ω–∞—è –≤–∞–º–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è.")
                    return
                db.users.update_one({"userid": ctx.author.id},
                                    {"$set": {"birthday_day": day, "birthday_month": month, "birthday_year": year}})
                await ctx.reply(f"–í–∞—à –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è –∑–∞–ø–∏—Å–∞–Ω –∫–∞–∫ `{value}`.")
            except:
                await ctx.reply("–í–≤–µ–¥—ë–Ω–Ω–∞—è –≤–∞–º–∏ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è.")

        elif field == "–ø–æ–º–æ—â—å":
            embed = discord.Embed(title="–ü–æ–º–æ—â—å –ø–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—é",
                                  description=f'–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å - {Data.preffix}—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å <–ø–æ–ª–µ> "–∑–Ω–∞—á–µ–Ω–∏–µ" (<> –Ω–µ –ø–∏—Å–∞—Ç—å)\n'
                                              f'–í—Å—Ç–∞–≤–∫–∞ –∑–Ω–∞—á–µ–Ω–∏–π: –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ',
                                  colour=Data.getEmbedColor(Data.EmbedColor.Neutral))
            embed.add_field(name="–æ—Å–µ–±–µ", value="–°—Ç—Ä–æ–∫–∞ –û —Å–µ–±–µ. –ü—Ä–∏–Ω–∏–º–∞–µ—Ç –ª—é–±—É—é —Å—Ç—Ä–æ–∫—É", inline=False)
            embed.add_field(name="–≤–æ–∑—Ä–∞—Å—Ç", value="–í–∞—à –≤–æ–∑—Ä–∞—Å—Ç: —á–∏—Å–ª–æ", inline=False)
            embed.add_field(name="—á–∞—Å–æ–≤–æ–π–ø–æ—è—Å", value="–ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –≥—Ä–∏–Ω–≤–∏—á–∞. –ß–∏—Å–ª–æ", inline=False)
            embed.add_field(name="—Ü–≤–µ—Ç", value="–¶–≤–µ—Ç –≤–∞—à–µ–≥–æ –ø—Ä–æ—Ñ–∏–ª—è –≤ HEX-–∑–∞–ø–∏—Å–∏.", inline=False)
            embed.add_field(name="–ê–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫–∏",
                            value=f"`–∞–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫` - –ª—é–±–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∫—Ä–æ–º–µ 0, –Ω–µ—Ç, –ª–æ–∂—å, false, False –≤–∫–ª—é—á–∞–µ—Ç –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫–∏\n"
                                  f"`–∞–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫-–Ω–µ–∞–∫—Ç–∏–≤–µ–Ω` - —Å—Ç—Ä–æ–∫–∞ –¥–ª—è –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫–∞, –∫–æ–≥–¥–∞ –≤—ã –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã\n"
                                  f"`–∞–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫-–æ—Ñ—Ñ–ª–∞–π–Ω` - —Å—Ç—Ä–æ–∫–∞ –¥–ª—è –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫–∞, –∫–æ–≥–¥–∞ –≤—ã –æ—Ñ—Ñ–ª–∞–π–Ω\n"
                                  f"`–∞–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫-–Ω–µ–±–µ—Å–ø–æ–∫–æ–∏—Ç—å` - —Å—Ç—Ä–æ–∫–∞ –¥–ª—è –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫–∞, –∫–æ–≥–¥–∞ —É –≤–∞—Å —Å—Ç–æ–∏—Ç —Å—Ç–∞—Ç—É—Å –Ω–µ –±–µ—Å–ø–æ–∫–æ–∏—Ç—å.\n"
                                  f"–ß—Ç–æ –±—ã –æ—Ç–∫–ª—é—á–∏—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫ - –Ω–∏—á–µ–≥–æ –Ω–µ –≤–ø–∏—Å—ã–≤–∞–π—Ç–µ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∑–Ω–∞—á–µ–Ω–∏—è.",
                            inline=False)
            embed.add_field(name="–ø–æ–ª", value="`–ø–æ–ª` - –£–∫–∞–∑—ã–≤–∞–µ—Ç –≤–∞—à (–±–∏–ª–æ–≥–∏—á–µ—Å–∫–∏–π) –ø–æ–ª.\n–í–ø–∏—à–∏—Ç–µ `–º` –¥–ª—è –º—É–∂—Å–∫–æ–≥–æ, `–∂` –¥–ª—è"
                                              " –∂–µ–Ω—Å–∫–æ–≥–æ. –ï—Å–ª–∏ –≤–∞—à –ø–æ–ª - –∫–æ–≤—Ä–æ–ª–∏–Ω, –ª–∞–º–∏–Ω–∞—Ç, –ø–ª–∏—Ç–∫–∞, –¥—Ä—É–≥–∏–µ —Å—Ç—Ä–æ–∏—Ç–µ–ª—å–Ω—ã–µ "
                                              "–º–∞—Ç–µ—Ä–∏–∞–ª—ã, –≤—ã —Å—á–∏—Ç–∞–µ—Ç–µ —á—Ç–æ –æ–Ω –Ω–µ –≤–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è –≤ —Ç–æ, —á—Ç–æ –ø—Ä–∏–¥—É–º–∞–ª–∞ –ø—Ä–∏—Ä–æ–¥–∞ "
                                              "–∏–ª–∏ –≤—ã –ø—Ä–æ—Å—Ç–æ –Ω–µ —Ö–æ—Ç–∏—Ç–µ –µ–≥–æ –≥–æ–≤–æ—Ä–∏—Ç—å –∏–ª–∏ —Ö–æ—Ç–∏—Ç–µ —Å–±—Ä–æ—Å–∏—Ç—å - –≤–ø—Ä–∏—à–∏—Ç–µ `-` "
                                              "(—Ç–∞–∫ –∂–µ —ç—Ç–æ –±—É–¥–µ—Ç \"–Ω–µ —É–∫–∞–∑–∞–Ω–æ\", —á—Ç–æ –∏–¥—ë—Ç –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)", inline=False)
            embed.add_field(name="–î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è",value="`–¥–µ–Ω—å—Ä–æ–∂–¥–µ–Ω–∏—è` –∏–ª–∏ `–¥—Ä` –£–∫–∞–∑—ã–≤–∞—Ç –≤–∞—à –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è. –í–ø–∏—à–∏—Ç–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –¥–¥.–º–º.–≥–≥–≥–≥ –≤–∞—à—É –ù–ê–°–¢–û–Ø–©–£–Æ –¥–∞—Ç—É —Ä–æ–∂–¥–µ–Ω–∏—è. "
                                                       "–£—á—Ç–∏—Ç–µ, —á—Ç–æ –≤–æ–∑—Ä–∞—Å—Ç –ù–ï –±—É–¥–µ—Ç –ø–µ—Ä–µ—Ä–∞—Å—á–∏—Ç–∞–Ω –ø—Ä–∏ –¥–Ω–µ —Ä–æ–∂–¥–µ–Ω–∏—è –∏–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ. –î–ª—è —Å–±—Ä–æ—Å–∞ –≤–ø–∏—à–∏—Ç–µ `-`.",inline=False)
            await ctx.reply(embed=embed)
        else:
            ctx.reply("–î–æ–ø—É—Å—Ç–∏–º—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:\n"
                      "- –æ—Å–µ–±–µ (—Å—Ç—Ä–æ–∫–∞)\n"
                      "- —á–∞—Å–æ–≤–æ–π–ø–æ—è—Å (—Ü–µ–ª–æ–µ —á–∏—Å–ª–æ)\n"
                      "- –≤–æ–∑—Ä–∞—Å—Ç (—Ü–µ–ª–æ–µ —á–∏—Å–ª–æ)")


def setup(bot):
    bot.add_cog(social(bot))
