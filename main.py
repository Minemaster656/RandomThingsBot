import asyncio
import datetime
import platform
# TODO: add transformers to requirements
import json
import time

import aiohttp
# -*- coding: utf-8 -*-
# try:
import discord
# from discord_components import DiscordComponents, Button
from discord import Option, Webhook, Forbidden
# except:
#     import pycord as discord
#     from pycord import Option, Webhook, Forbidden
# import Apocalypse
# import HetTol
import d
import logger
# from tests_and_utils import dbClone
import Data
import utils

from private import coreData
from Data import db

import os

whitelist = [609348530498437140, 617243612857761803]
token = coreData.token_ds
from discord.ext import commands

sendAllExceptionsToChat = True

if platform.system() == 'Windows':
    try:
        import win10toast
    except:
        import os

        os.system("pip install win10toast")
        import win10toast
    toaster = win10toast.ToastNotifier()
startTimeCounter = time.time()
intents = discord.Intents.default()  # –ü–æ–¥–∫–ª—é—á–∞–µ–º "–†–∞–∑—Ä–µ—à–µ–Ω–∏—è"
intents.message_content = True
intents.reactions = True
intents.members = True
intents.presences = True
# intents.guilds = True
intents.guilds = True
# intents.channels = True
# intents.threads = True

# –ó–∞–¥–∞—ë–º –ø—Ä–µ—Ñ–∏–∫—Å –∏ –∏–Ω—Ç–µ–Ω—Ç—ã
runtime = time.time()
loopCounter = 0
bot = commands.Bot(command_prefix=Data.preffix, intents=intents)
bot.max_messages = 20000

logger.log_sync("Starting...")


@bot.event
async def on_ready():
    total_members = sum(len(guild.members) for guild in bot.guilds)
    guildnames = ""
    totalguilds = len(bot.guilds)
    if totalguilds <= 100:
        guildnames = "‚ïî" + "‚ïê" * 100 + "‚ï¶" + "‚ïê" * 20 + "‚ï¶" + "‚ïê" * 32 + "‚ïó" + "\n"
        guildnames += "‚ïë" + "GUILD NAME".ljust(100) + "‚ïë" + "GUILD ID".ljust(20) + "‚ïë" + "GUILD OWNER NAME".ljust(
            32) + "‚ïë" + "\n"
        guildnames += "‚ïë" + "‚ïê" * 100 + "‚ï¨" + "‚ïê" * 20 + "‚ï¨" + "‚ïê" * 32 + "‚ïë" + "\n"
        for guild in bot.guilds:
            # print(guild.name)
            # try:
            guildnames += "‚ïë" + "‚ïê" * 100 + "‚ï¨" + "‚ïê" * 20 + "‚ï¨" + "‚ïê" * 32 + "‚ïë" + "\n"
            guildnames += "‚ïë" + f"{guild.name: <100}" + "‚ïë" + f"{guild.id: <20}" + "‚ïë" + f"{(guild.get_member(guild.owner_id).name): <32}" + "‚ïë" + "\n"
            # except:
            #     guildnames += "‚ïë" + "UNKNOWN".ljust(100) + "‚ïë" + "UNKNOWN".ljust(
            #         20) + "‚ïë" + "UNKNOWN".ljust(32) + "‚ïë" + "\n"
            #     guildnames += "‚ïë" + "‚ïê" * 100 + "‚ï¨" + "‚ïê" * 20 + "‚ï¨" + "‚ïê" * 32 + "‚ïë" + "\n"
        guildnames += "‚ïö" + "‚ïê" * 100 + "‚ï©" + "‚ïê" * 20 + "‚ï©" + "‚ïê" * 32 + "‚ïù" + "\n"

    print(
        f"–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∫–∞–∫ {bot.user} –∑–∞ {round(time.time() - startTimeCounter, 3)} —Å–µ–∫—É–Ω–¥. –ü—Ä–µ—Ñ—Ñ–∏–∫—Å: {bot.command_prefix}\n"
        f"–ö–æ–≥–∏:{str(bot.cogs.keys())}\n"
        f"{totalguilds} —Å–µ—Ä–≤–µ—Ä–æ–≤ | {total_members} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n"
        f"{guildnames}")

    await bot.change_presence(activity=discord.Game(f"{totalguilds} —Å–µ—Ä–≤–µ—Ä–æ–≤"))
    if platform.system() == 'Windows':
        toaster.show_toast(f"Random Things Bot",
                           f"RTB:discord_bot –∑–∞–ø—É—â–µ–Ω –∑–∞ {round(time.time() - startTimeCounter, 3)} —Å–µ–∫—É–Ω–¥. –ü—Ä–µ—Ñ—Ñ–∏–∫—Å: {bot.command_prefix}\n",

                           threaded=True)
    await logger.log("Bot started in " + str(round(time.time() - startTimeCounter, 3)) + f" seconds as {bot.user} with preffix {bot.command_prefix} | {totalguilds} guilds, {total_members} members")


async def noPermission(ctx, permissions):
    """–í—ã–∑–æ–≤ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π. –ù—É–∂–µ–Ω –∫–æ–Ω—Ç–µ–∫—Å—Ç /-–∫–æ–º–∞–Ω–¥—ã!"""
    result = db.users.find_one({"userid": ctx.author.id}, {"permissions": 1})
    perms = result["permissions"] if result else None
    permissions = permissions.replace("|", "–∏–ª–∏").replace("&", "–∏")
    permissions = f"`{permissions}`"
    embed = discord.Embed(title="–£ –í–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤!", description="–ù–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è!",
                          color=Data.embedColors["Error"])
    embed.add_field(name="–ù–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è!",
                    value=f"–í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ(—ã) —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ(—è): \n> {permissions}\n<@{ctx.author.id}>\n"
                          f"–í–∞—à–∏ —Ç–µ–∫—É—â–∏–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è: \n"
                          f"> {perms}")
    await ctx.respond(embed=embed, ephemeral=False)


@bot.event
async def on_command_error(ctx, error):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫"""
    none = "None"
    # await logger.log("Something went wrong: " + str(error), logger.LogLevel.ERROR)
    if isinstance(error, commands.MissingPermissions):
        embed = discord.Embed(title="–£ –í–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤!", description="–ù–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è!",
                              color=Data.embedColors["Error"])
        embed.add_field(name="–ù–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è!", value=f"–í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ(—ã) —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ(—è): {none}")
        await ctx.send(embed=embed, ephemeral=False)
    elif isinstance(error, commands.CommandOnCooldown):
        await ctx.send(f"–ö–æ–º–∞–Ω–¥–∞ –ø–µ—Ä–µ–∑–∞—Ä—è–∂–∞–µ—Ç—Å—è. –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ —á–µ—Ä–µ–∑ **{round(error.retry_after)}** —Å–µ–∫—É–Ω–¥!")
    elif isinstance(error, commands.MissingPermissions):
        await ctx.send(f"–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!")
    elif isinstance(error, IndexError):
        print(db)
        print(Data.client)
        await ctx.send(error)
    if not Data.ISHOST:
        if not sendAllExceptionsToChat:
            await ctx.send("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞! –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫—É.")
            print(error)
        else:
            await ctx.send(f'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∫–æ–º–∞–Ω–¥—ã: {error}')
            print(error)


@bot.slash_command(name="–Ω–∞—Å—Ç—Ä–æ–π–∫–∏-–±–æ—Ç–∞", description="–ó–∞–¥–∞—Ç—å –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É –±–æ—Ç–∞. üöß –¢–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤ –±–æ—Ç–∞.",
                   guilds=Data.BOT_INTERNAL_COMMANDS_GUILDS)
async def set_settings(ctx, field: Option(str, description="–ü–æ–ª–µ", required=True,
                                          choices=["SQL+commit", "eval", "–¢–∞–±–ª–∏—Ü—ã", "–ë–∞–ª–∞–Ω—Å"]) = 0,
                       value: Option(str, description="–ó–Ω–∞—á–µ–Ω–∏–µ", required=True) = 0,
                       ephemeral: Option(bool, description="–í–∏–¥–Ω–æ –ª–∏ —Ç–æ–ª—å–∫–æ –≤–∞–º? –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é - –≤—Å–µ–º.",
                                         required=False) = False,
                       member: Option(discord.Member, description="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–≥–æ –≤–ª–∏—è–µ—Ç –∫–æ–º–∞–Ω–¥–∞",
                                      required=False) = None):
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ –ø—Ä–∏–∫–æ–ª—ã –±–æ—Ç–∞ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤ –ë–û–¢–ê."""
    hasPermission = False
    hasPermission = await Data.parsePermissionFromUser(ctx.author.id, "root")
    if member is None:
        member = ctx.author
    if hasPermission == True:
        embed = discord.Embed(title="–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ...", description="–í–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ root –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.",
                              color=Data.embedColors["Warp"])

        if field == "eval":
            # eval(value)
            embed = discord.Embed(title="–ö–æ–¥ –Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω!", description=f"–ö–æ–¥: {value}",
                                  color=Data.embedColors["Success"])

        await ctx.respond(embed=embed, ephemeral=ephemeral)
    else:
        await noPermission(ctx, "root")


@bot.command(aliases=['me', '—è', '>'])
async def sendMsg(ctx, *, args):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ª–∏—Ü–∞ –±–æ—Ç–∞."""
    if await Data.parsePermissionFromUser(ctx.author.id, "say_as_bot"):
        if ctx.message.reference:
            await ctx.send(args, reference=ctx.message.reference)
        else:
            await ctx.send(args)
    await ctx.message.delete()


@bot.slash_command(description="–ü–µ—Ä–µ–≤–æ–¥ —Ä–∞—Å–∫–ª–∞–¥–∫–∏", name="—Ä–∞—Å–∫–ª–∞–¥–∫–∞")  # guilds=[1076117733428711434]
async def keyboard_layout_switcher(ctx, text):
    ru_layout = '–π—Ü—É–∫–µ–Ω–≥—à—â–∑—Ö—ä—Ñ—ã–≤–∞–ø—Ä–æ–ª–¥–∂—ç—è—á—Å–º–∏—Ç—å–±—é—ë'
    en_layout = 'qwertyuiop[]asdfghjkl;\'zxcvbnm,.`'
    result = ''
    for char in text:
        if char.lower() in ru_layout:
            index = ru_layout.index(char.lower())
            result += en_layout[index] if char.islower() else en_layout[index].upper()
        elif char.lower() in en_layout:
            index = en_layout.index(char.lower())
            result += ru_layout[index] if char.islower() else ru_layout[index].upper()
        else:
            result += char
    await ctx.respond(result, ephemeral=True)


@bot.slash_command(name="—Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è", description="–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. üöß –¢–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤ –±–æ—Ç–∞.",
                   guilds=Data.BOT_INTERNAL_COMMANDS_GUILDS)
async def editMemberPermissions(ctx, permission: Option(str, description="–†–∞–∑—Ä–µ—à–µ–Ω–∏–µ. ? –¥–ª—è —Å–ø–∏—Å–∫–∞",
                                                        choises=Data.permissions_user,
                                                        required=True) = "none",
                                member: Option(discord.Member, description="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", required=True) = None,
                                value: Option(bool, description="–ó–Ω–∞—á–µ–Ω–∏–µ", required=True) = True,
                                ephemeral: Option(bool, description="–í–∏–¥–Ω–æ –ª–∏ —Ç–æ–ª—å–∫–æ –≤–∞–º?",
                                                  required=False) = False):
    if member is None:
        member = ctx.author
    perm_root = await Data.parsePermissionFromUser(ctx.author.id, "root")
    perm_edit = await Data.parsePermissionFromUser(ctx.author.id, "edit_permissions")
    if permission != "?":
        if perm_root or perm_edit:
            if permission != "root":
                await Data.setPermissionForUser(member.id, permission, value)
                embed = discord.Embed(title=f"–†–∞–∑—Ä–µ—à–µ–Ω–∏–µ {permission} –∏–∑–º–µ–Ω–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!",
                                      description=f"–†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–æ —É —É—á–∞—Å—Ç–Ω–∏–∫–∞ <@{member.id}> –Ω–∞ **{value}**",
                                      colour=Data.embedColors["Success"])
                await ctx.respond(embed=embed, ephemeral=ephemeral)
            else:
                if perm_root:
                    await Data.setPermissionForUser(member.id, permission, value)
                    embed = discord.Embed(title=f"–†–∞–∑—Ä–µ—à–µ–Ω–∏–µ {permission} –∏–∑–º–µ–Ω–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!",
                                          description=f"–†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–æ —É —É—á–∞—Å—Ç–Ω–∏–∫–∞ <@{member.id}> –Ω–∞ **{value}**",
                                          colour=Data.embedColors["Success"])
                    await ctx.respond(embed=embed, ephemeral=ephemeral)
                else:
                    await noPermission(ctx, "root")
        else:
            await noPermission(ctx, "root | edit_permissions")
    else:
        await ctx.respond(json.dumps(Data.permissions_user))


@bot.slash_command(name="–¥–æ–±–∞–≤–∏—Ç—å-–æ–ø—ã—Ç", description="–î–∞—ë—Ç –æ–ø—ã—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é. üöß –¢–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤ –±–æ—Ç–∞.",
                   guilds=Data.BOT_INTERNAL_COMMANDS_GUILDS)
async def addXP(ctx, user: Option(discord.Member, description="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", required=True) = 0,
                value: Option(float, description="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ. –û—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ –¥–ª—è —É–º–µ–Ω—å—à–µ–Ω–∏—è", required=True) = 0):
    if await Data.parsePermissionFromUser(ctx.author.id, "root"):
        doc = db.users.find_one({"userid": user.id})
        if doc:
            # doc = db.users.find_one({"id":user.id})
            doc = d.schema(doc, d.Schemes.user)
            doc["xp"] += value
            db.users.update_one({"userid": user.id}, {"$set": doc})
            print("Found")
        else:
            Data.writeUserToDB(user.id, user.name)
            doc = db.users.find_one({"userid": user.id})
            doc = d.schema(doc, d.Schemes.user)
            doc["xp"] += value
            db.users.update_one({"userid": user.id}, {"$set": doc})
            print("None")
        embed = discord.Embed(title="–í—ã–¥–∞–Ω –æ–ø—ã—Ç!", description=f"–í—ã–¥–∞–Ω–æ {value} –æ–ø—ã—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é <@{user.id}>.",
                              colour=Data.embedColors["Success"])
        await ctx.respond(embed=embed)
    else:
        await ctx.respond("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤!", ephemeral=True)


@bot.slash_command(name="–∏–Ω—Ñ–æ", description="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ")
async def info(ctx):
    embed = discord.Embed(title="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ",
                          description=f"[–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –±–æ—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä](https://discord.com/api/oauth2/authorize?client_id=1126887522690142359&permissions=8&scope=bot)"
                                      f"\n[–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –±–æ—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä (BETA-—Ç–µ—Å—Ç—ã)](https://discord.com/api/oauth2/authorize?client_id=1169691387562835968&permissions=8&scope=bot)"
                                      f"\n[–ò—Å—Ö–æ–¥–Ω–∏–∫–∏](https://github.com/Minemaster656/RandomThingsBot)\n"
                                      f"[–°–∞–π—Ç](https://glitchdev.ru)"
                                      f"", colour=Data.embedColors["Neutral"])
    await ctx.respond(embed=embed)


@bot.event
async def on_message(message):
    await bot.process_commands(message)
    try:
        await message.publish()
    except:
        ...


@bot.slash_command(name="–æ—Ç–ø—Ä–∞–≤–∏—Ç—å-–∂–∞–ª–æ–±—É-–Ω–∞-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", description="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∂–∞–ª–æ–±—É –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
async def report(ctx):
    await ctx.respond("–ñ–∞–ª–æ–±—ã –Ω–µ –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è, —ç—Ç–∞ —Ñ–∏—á–∞ –µ—â—ë –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ ;(")


# @bot.command(aliases=["–∫–æ–¥-–æ—Ç-—è–¥–µ—Ä–∫–∏"])
# async def getNukeCode(ctx):
#     await ctx.send(f"–û–¥–Ω–æ—Ä–∞–∑–æ–≤—ã–π –∫–æ–¥ –æ—Ç —è–¥–µ—Ä–∫–∏: ``nuke_{utils.hashgen(16)}::ot#FF#j#EX``")


# TODO: –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞—Ö–æ–¥–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä


async def statusLoop():
    global loopCounter
    await asyncio.sleep(120)
    if loopCounter == 0:
        total_members = sum(len(guild.members) for guild in bot.guilds)
        await bot.change_presence(activity=discord.Game(name=f"{total_members} —Å–µ—Ä–≤–µ—Ä–æ–≤"))
        loopCounter += 1
    elif loopCounter == 1:

        await bot.change_presence(activity=discord.Game(f"Discord-–∏–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞"))
        loopCounter += 1
    elif loopCounter == 2:

        await bot.change_presence(activity=discord.Game(name=f"PyCharm —É–∂–µ {int(time.time() - runtime)} —Å–µ–∫—É–Ω–¥"))
        loopCounter += 1
    elif loopCounter == 3:

        await bot.change_presence(activity=discord.Game(f"DoorkaEternal"))
        loopCounter = 0


# # voice:.idea/1696585352512.wav
# # voice:.idea/1696530559952.wav

def main():
    for f in os.listdir("./cogs"):
        if f.endswith("py"):
            bot.load_extension("cogs." + f[:-3])
            print(f"Cog loaded: {f}")
    bot.run(token)


if __name__ == "__main__":
    main()
